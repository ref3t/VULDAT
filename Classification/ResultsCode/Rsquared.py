
import numpy as np

# Data
true_predicted = np.array([57, 4, 55, 4, 30, 21, 4, 31, 21, 9, 6, 29, 71, 17, 4, 14, 1, 3, 9, 23, 6, 9, 1, 8, 7, 15, 1, 0, 9, 3, 2, 22, 6, 5, 16, 3, 7, 7, 4, 0, 8, 1, 1, 5, 6, 12, 6, 8, 26, 1, 0, 0, 2, 3, 16, 22, 9, 4, 5, 7, 10, 17, 10, 10, 3, 12, 5, 10, 10, 20, 1, 2, 8, 3, 3, 7, 12, 2, 6, 8, 2, 3, 9, 4, 6, 5, 19, 17, 14, 4, 2, 0, 6, 1, 19, 11, 8, 11, 8, 4, 5, 10, 29, 15, 4, 6, 20, 0, 34, 1, 33, 6, 0, 6])
real_data = np.array([65, 4, 72, 7, 39, 27, 4, 44, 36, 10, 8, 31, 72, 25, 8, 20, 26, 28, 31, 30, 13, 16, 3, 28, 16, 22, 3, 5, 20, 26, 19, 26, 6, 6, 18, 3, 22, 19, 17, 16, 20, 1, 19, 19, 19, 19, 19, 19, 28, 2, 1, 1, 5, 8, 17, 30, 11, 7, 7, 7, 10, 17, 10, 10, 10, 19, 6, 14, 10, 23, 18, 7, 14, 7, 7, 19, 14, 7, 7, 9, 19, 19, 19, 19, 19, 23, 30, 19, 20, 5, 3, 1, 17, 1, 20, 19, 14, 13, 19, 20, 17, 10, 30, 21, 6, 6, 20, 7, 34, 3, 33, 6, 1, 7])


# Calculate metrics
mae = np.mean(np.abs(real_data - true_predicted))
mse = np.mean((real_data - true_predicted) ** 2)
rmse = np.sqrt(mse)

print("Mean Absolute Error (MAE):", mae)
print("Mean Squared Error (MSE):", mse)
print("Root Mean Squared Error (RMSE):", rmse)
